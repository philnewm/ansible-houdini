---

- name: Gather package facts
  ansible.builtin.package_facts:

# INFO only required to free up some space in vbox vm
- name: Purge snap on ubuntu
  when: ansible_distribution == "Ubuntu" and "snapd" in ansible_facts.packages
  ansible.builtin.include_tasks:
    file: purge_snap.yml

- name: Check for env vars
  ansible.builtin.assert:
    that:
      - sidefx_client_id is defined
      - sidefx_client_secret_key is defined
    fail_msg: "Houdini download api credentials not defined"
    quiet: true

- name: Check for houdini uninstaller
  ansible.builtin.stat:
    path: "{{ houdin_install_dir }}/houdini.uninstall"
  register: houdini_installation_path

- name: Get remote houdini installer
  when: not houdini_installation_path.stat.exists
  ansible.builtin.include_tasks:
    file: prepare_installer.yml

- name: "Include dependencies"
  ansible.builtin.include_tasks:
    file: dependencies.yml

- name: Set SELinux to permissive
  when: ansible_os_family == "RedHat" and not houdini_installation_path.stat.exists
  become: true
  ansible.posix.selinux:
    policy: targeted
    state: permissive

- name: "Include installer"
  when: not houdini_installation_path.stat.exists
  ansible.builtin.include_tasks:
    file: run_installer.yml

- name: Configure license manager with selinux
  when: ansible_os_family == "RedHat" and "license" in houdini_features
  ansible.builtin.include_tasks:
    file: local_license_manager_setup.yml

- name: Set SELinux back to enforcing
  when: ansible_os_family == "RedHat"
  become: true
  ansible.posix.selinux:
    policy: targeted
    state: enforcing

...
