---

- name: Install selinux mod dependencies
  become: true
  loop: "{{ selinux_packages }}"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present

- name: Copy service file
  become: true
  ansible.builtin.copy:
    src: "/usr/lib/sesi/sesinetd.service"
    dest: "/usr/lib/systemd/system/sesinetd.service"
    remote_src: true

- name: Reload systemd manager configuration
  become: true
  ansible.builtin.command:
    cmd: systemctl daemon-reload

- name: Start sesinetd service
  become: true
  ansible.builtin.systemd:
    name: sesinetd
    state: started
    enabled: true

- name: Check status of sesinetd service
  become: true
  ansible.builtin.command:
    cmd: systemctl status sesinetd
  register: sesinetd_status
  ignore_errors: true

- name: Display sesinetd service status
  ansible.builtin.debug:
    var: sesinetd_status.stdout

- name: Create temp directory
  ansible.builtin.file:
    path: /tmp/sesinetd-selinux
    state: directory
    mode: "0755"

- name: Generate selinux policy for sesinetd
  become: true
  ansible.builtin.command:
    cmd: "sepolicy generate --init /usr/lib/sesi/sesinetd"
    chdir: "/tmp/sesinetd-selinux"

- name: Run selinux policy for sesinetd
  become: true
  ansible.builtin.command:
    cmd: "./sesinetd.sh"
    chdir: "/tmp/sesinetd-selinux"

- name: Restore selinux to systems selinux policy
  become: true
  ansible.builtin.command:
    cmd: "restorecon -v /usr/lib/sesi/sesinetd /usr/lib/systemd/system"

- name: Reload systemd manager configuration
  become: true
  ansible.builtin.command:
    cmd: systemctl daemon-reload

- name: Remove temp directory
  become: true
  ansible.builtin.file:
    path: /tmp/sesinetd-selinux
    state: absent

- name: Remove selinux mod dependencies
  become: true
  loop: "{{ selinux_packages }}"
  ansible.builtin.package:
    name: "{{ item }}"
    state: absent

...
